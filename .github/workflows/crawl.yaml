name: MAPP - Mobile App Review Crawler & Deploy

on:
  schedule:
    - cron: '0 9 * * 1'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write 

jobs:
  crawl-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install fonts
        run: |
          sudo apt-get update
          sudo apt-get install -y fonts-nanum
      
      - name: Verify fonts
        run: fc-list :lang=ko
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-py3.12-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-py3.12-
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Setup Korean Proxy
        run: |
          echo "🌏 Setting up Korean proxy..."
          # Install proxy tools
          sudo apt-get update
          sudo apt-get install -y proxychains4
          
          # Configure proxychains with Korean proxy
          sudo tee /etc/proxychains4.conf > /dev/null <<EOF
          dynamic_chain
          proxy_dns
          tcp_read_time_out 5000
          tcp_connect_time_out 3000
          [ProxyList]
          # Korean proxies only
          http 121.78.139.75 8080
          http 175.126.123.219 8080
          http 211.249.220.24 8080
          http 58.229.183.61 3128
          http 175.126.232.92 8080
          http 220.230.108.108 3128
          http 175.126.232.93 8080
          http 121.78.139.77 8080
          http 211.249.220.25 8080
          EOF
          
          echo "✅ Proxy configuration completed"

      - name: Environment Check
        run: |
          echo "📦 Installed packages:"
          pip list | grep -E "(google|play|scraper)" || echo "No matching packages"
          
          echo "🌍 Testing proxy connection:"
          # Test current IP
          echo "Current IP:"
          curl -s https://ipapi.co/json/ | jq '.ip, .country_name, .city' || echo "Direct connection"
          
          echo "Testing individual Korean proxies:"
          # Test each proxy individually with short timeout
          for proxy in "121.78.139.75:8080" "175.126.123.219:8080" "211.249.220.24:8080"; do
            echo "Testing $proxy..."
            timeout 5 curl -x http://$proxy -s https://httpbin.org/ip || echo "$proxy failed"
          done

      - name: Run MAPP Crawler with Debug
        run: |
          echo "🚀 Starting MAPP Crawler with enhanced debugging..."
          echo "📊 Configuration:"
          echo "   • REVIEW_COUNT: ${REVIEW_COUNT}"
          echo "   • ANALYSIS_DAYS: ${ANALYSIS_DAYS}"
          
          # Check current location
          echo "🌍 Checking current location..."
          COUNTRY=$(curl -s https://ipapi.co/country_code/ || echo "UNKNOWN")
          echo "Current country code: $COUNTRY"
          
          if [ "$COUNTRY" != "KR" ]; then
            echo "🌏 Not in Korea - using Korean proxy only..."
            proxychains4 python -u main.py
          else
            echo "🇰🇷 Already in Korea - using direct connection..."
            python -u main.py
          fi
        env:
          PYTHONUNBUFFERED: 1
          DEBUG_MODE: 1
          REVIEW_COUNT: 500
          ANALYSIS_DAYS: 7

      - name: Rename HTML file to index.html
        run: |
          cd ./output
          cp mapp_report_*.html index.html
          echo "✓ index.html created from MAPP report"
          ls -la *.html

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./output

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4